FROM ubuntu:22.04
SHELL ["/bin/bash", "-c"]
# Set the timezone info because otherwise tzinfo blocks install
# flow and ignores the non-interactive frontend command ðŸ¤¬ðŸ¤¬ðŸ¤¬
RUN ln -snf /usr/share/zoneinfo/America/New_York /etc/localtime && echo "/usr/share/zoneinfo/America/New_York" > /etc/timezone

# Core system packages
RUN apt-get update --fix-missing
RUN apt install -y software-properties-common wget curl gpg gcc git make g++ unzip

# Install miniconda to /miniconda
RUN curl -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
RUN bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b
RUN rm Miniconda3-latest-Linux-x86_64.sh
ENV PATH=/miniconda/bin:${PATH}
RUN conda update -y conda

RUN apt install -y apt-utils

ENV FORCE_CUDA="0"
RUN conda install -y numpy python=3.11 pytorch==2.1.2 torchvision==0.16.2 cpuonly fvcore iopath pytorch3d -c pytorch -c pytorch3d -c fvcore -c iopath -c conda-forge
# YAPF versions newer than this break the MMCV config system
RUN pip install yapf==0.40.1
RUN pip install pyarrow pyquaternion open3d tensorboard pytorch-lightning==1.9.4 imageio black isort nntime
# This is required for Open3D to not blow up on startup
RUN apt install -y freeglut3-dev
RUN conda install -y ninja -c conda-forge
ENV MAX_JOBS=46
RUN pip install mmcv==2.1.0

# Install nuscenes-devkit, but knock out the pegged Matplotlib version which lacks a wheel for Python 3.11
RUN git clone https://github.com/nutonomy/nuscenes-devkit.git /nuscenes-devkit
WORKDIR /nuscenes-devkit
RUN git checkout 9df79f48bac3cc713f4dbd2b48049be845605c51
# On line 4 of setup/requirements/requirements_base.txt, change matplotlib<3.6.0 to matplotlib
RUN sed -i 's/matplotlib<3.6.0/matplotlib/' setup/requirements/requirements_base.txt
RUN pip install -e setup

RUN pip install FastGeodis==1.0.5 --no-build-isolation

RUN pip install bucketed-scene-flow-eval==2.0.8


ENV PYTHONPATH=/project:/bucketed_scene_flow_eval:/:${PYTHONPATH}

# Setup environment to support running as non-root user
ENV HOME=/home/user
RUN mkdir /payload_files
RUN chmod 777 /payload_files
COPY bashrc /payload_files/bashrc
WORKDIR /project
COPY entrypoint.sh /entrypoint.sh
RUN chmod 777 /entrypoint.sh
RUN chmod 777 /home

ENTRYPOINT ["/entrypoint.sh"]
